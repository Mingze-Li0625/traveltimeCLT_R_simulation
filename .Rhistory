#all(R1==R2,na.rm = T)
#all(p==p2,na.rm = T)
#which(is.na(p$variance)==T)
plot(sample[[2]]$real_length,R1,pch = 16,cex = 0.6)
plot(real_price[1:1000],R1,pch = 16,cex = 0.6)
plot(sample[[2]]$real_time,R1,xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(p$ETA,R1,xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(R1,R2,pch = 16,cex = 0.6)
plot_CDF_compare(sample[[2]]$real_time,p$ETA,"CLT model expectation")
plot(density(na.omit(R1)))
plot(simulated_price$simulated_price,simulated_price$pressured_price,pch = 16,cex = 0.6)
plot(pressure_test[[2]]$real_length,R1,pch = 16,cex = 0.6)
plot(real_price[1:1000],R1,pch = 16,cex = 0.6)
plot(sample[[2]]$real_time,R1,xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(p$ETA,R1,xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(R1,R2,pch = 16,cex = 0.6)
plot_CDF_compare(sample[[2]]$real_time,p$ETA,"CLT model expectation")
plot(density(na.omit(R1)))
plot(simulated_price$simulated_price,simulated_price$pressured_price,pch = 16,cex = 0.6)
plot(pressure_test[[2]]$real_length,pressure_R1[1:1000],pch = 16,cex = 0.6)
plot(real_price[1:1000],pressure_R1[1:1000],pch = 16,cex = 0.6)
plot(pressure_test[[2]]$real_length,pressure_R1,xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(pressure_test[[2]]$real_length,pressure_R1[1:1000],xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(pressure_p$ETA,pressure_R1,xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(pressure_R1,pressure_R2,pch = 16,cex = 0.6)
plot_CDF_compare(sample[[2]]$real_time,pressure_p$ETA,"CLT model expectation")
?plot_CDF_compare
plot_CDF_compare(sample[[2]]$real_time,pressure_p$ETA,x_max = 10000,"CLT model expectation")
plot_CDF_compare(sample[[2]]$real_time,pressure_p$ETA,x_max = 15000,"CLT model expectation")
plot(density(na.omit(pressure_R1)))
plot(simulated_price$simulated_price,simulated_price$pressured_price,pch = 16,cex = 0.6)
plot(pressure_test[[2]]$real_length,pressure_R1[1:1000],pch = 16,cex = 0.6)
plot(real_price[1:1000],pressure_R1[1:1000],pch = 16,cex = 0.6)
plot(pressure_test[[2]]$real_length,pressure_R1[1:1000],xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(pressure_p$ETA,pressure_R1,xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(pressure_R1,pressure_R2,pch = 16,cex = 0.6)
plot_CDF_compare(sample[[2]]$real_time,pressure_p$ETA,x_max = 15000,"CLT model expectation")
plot(density(na.omit(pressure_R1)))
plot(sample[[2]]$real_length,R1,pch = 16,cex = 0.6)
plot(real_price[1:1000],R1,pch = 16,cex = 0.6)
plot(sample[[2]]$real_time,R1,xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(p$ETA,R1,xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(R1,R2,pch = 16,cex = 0.6)
plot_CDF_compare(sample[[2]]$real_time,p$ETA,"CLT model expectation")
plot(density(na.omit(R1)))
knitr::opts_chunk$set(echo = TRUE)
#source('traveltimeCLTfunctions.R')
library(traveltimeCLT)
library(data.table)
trips <- fread('data/trips.csv')
id <- sample(unique(trips$trip),1000)
train = trips[!trips$trip %in% id,]
test =  trips[trips$trip %in% id,]
timeBin_x_edge <- get_timeBin_x_edges(train)
#sample_route(id,trips,1001)
sample <- sample_route(id,trips,1001,timeBin_x_edge)
pressure_test <- sample_route(id,trips,1001,timeBin_x_edge,abuse_ratio = 0.1,abuse_multiplier = 5)
plot_CDF_compare(sample[[2]]$real_time,sample[[1]]$dependent_time,"frequency simulation")
plot_CDF_compare(sample[[2]]$real_length,sample[[1]]$simulated_length,"global edge number simulation","total length","CDF of length",60000)
real_price=price(sample[[2]]$real_time,sample[[2]]$real_length)[,1]
simulated_price<-data.table(simulated_price=price(sample[[1]]$dependent_time,sample[[1]]$simulated_length)[,1],pressured_price=price(pressure_test[[1]]$dependent_time,pressure_test[[1]]$simulated_length)[,1])
plot_CDF_compare(real_price,simulated_price$simulated_price," simulated price","price","CDF of price",100)
names(train)[c(2,3,5,7,8)]=c("tripID","entry_time","duration_secs","distance_meters","linkID")
train$speed=exp(train$logspeed)
train$timeBin=time_bins_readable(train$entry_time)
fit <- traveltimeCLT(train)
test = trips[trips$trip %in% id,]
names(test)[c(2,3,5,7,8)]=c("tripID","entry_time","1","distance_meters","linkID")
names(pressure_test[[3]])=c("tripID","linkID","entry_time","distance_meters")
p=predict(fit, test)
pressure_p=predict(fit,pressure_test[[3]])
fit2 <- traveltimeCLT(train, model = 'population')
p2=predict(fit2, test)
pressure_p2=predict(fit2,pressure_test[[3]])
start_times <- test[, .(start_time = entry_time[1]), by = tripID]
pressure_start_time <- (pressure_test[[3]][, .(start_time = entry_time[1]), by = tripID][,2])
pressure_start_time <-pressure_start_time[["start_time"]]
R1=request_R(p,start_times$start_time-300,start_times$start_time,sample[[2]]$real_length,1,risk_free=0)
R2=request_R(p2,start_times$start_time-300,start_times$start_time,sample[[2]]$real_length,1,risk_free=0)
pressure_R1=request_R(pressure_p,pressure_start_time-300,pressure_start_time,pressure_test[[1]]$simulated_length,1,risk_free=0)
pressure_R2=request_R(pressure_p2,pressure_start_time-300,pressure_start_time,pressure_test[[1]]$simulated_length,1,risk_free=0)
all(R1==R2)
all(p==p2)
all(R1>0)
#all(R1==R2,na.rm = T)
#all(p==p2,na.rm = T)
#which(is.na(p$variance)==T)
plot(sample[[2]]$real_length,R1,pch = 16,cex = 0.6)
plot(real_price[1:1000],R1,pch = 16,cex = 0.6)
plot(sample[[2]]$real_time,R1,xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(p$ETA,R1,xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(R1,R2,pch = 16,cex = 0.6)
plot_CDF_compare(sample[[2]]$real_time,p$ETA,"CLT model expectation")
plot(density(na.omit(R1)))
plot(simulated_price$simulated_price,simulated_price$pressured_price,pch = 16,cex = 0.6)
plot(pressure_test[[2]]$real_length,pressure_R1[1:1000],pch = 16,cex = 0.6)
plot(real_price[1:1000],pressure_R1[1:1000],pch = 16,cex = 0.6)
plot(pressure_test[[2]]$real_length,pressure_R1[1:1000],xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(pressure_p$ETA,pressure_R1,xlim = c(0, 6000),pch = 16,cex = 0.6)
plot(pressure_R1,pressure_R2,pch = 16,cex = 0.6)
plot_CDF_compare(sample[[2]]$real_time,pressure_p$ETA,x_max = 15000,"CLT model expectation")
plot(density(na.omit(pressure_R1)))
knitr::opts_chunk$set(echo = TRUE)
# Load required libraries
library(traveltimeCLT)
library(data.table)
set.seed(12345)
trips <- fread("data/trips.csv")
id <- sample(unique(trips$trip), 1000)
train <- trips[!trips$trip %in% id, ]
test <- trips[trips$trip %in% id, ]
timeBin_x_edge <- get_timeBin_x_edges(train)
# sample_route(id,trips,1001)
sample <- sample_route(id, trips, 1001, timeBin_x_edge, abuse_ratio = 0, lambda = 0)
pressure_test <- sample_route(id, trips, 1000, timeBin_x_edge, abuse_ratio = 0, lambda = 0.8)
plot_CDF_compare(sample[[2]]$real_time, sample[[1]]$dependent_time, "frequency simulation")
plot_CDF_compare(pressure_test[[2]]$real_time, pressure_test[[1]]$dependent_time, "frequency simulation")
real_price <- price(sample[[2]]$real_time, sample[[2]]$real_length)[, 1]
simulated_price <- data.table(
simulated_price = price(sample[[1]]$dependent_time, sample[[1]]$simulated_length)[1:1000, 1],
pressured_price = price(pressure_test[[1]]$dependent_time, pressure_test[[1]]$simulated_length)[, 1]
)
names(train)[c(2, 3, 5, 7, 8)] <- c("tripID", "entry_time", "duration_secs", "distance_meters", "linkID")
train$speed <- exp(train$logspeed)
train$timeBin <- time_bins_readable(train$entry_time)
fit <- traveltimeCLT(train)
test <- trips[trips$trip %in% id, ]
names(test)[c(2, 3, 5, 7, 8)] <- c("tripID", "entry_time", "1", "distance_meters", "linkID")
names(sample[[3]]) <- c("tripID", "linkID", "entry_time", "distance_meters")
names(pressure_test[[3]]) <- c("tripID", "linkID", "entry_time", "distance_meters")
p <- predict(fit, test)
simulated_p <- predict(fit, sample[[3]])
pressure_p <- predict(fit, pressure_test[[3]])
start_times <- test[, .(start_time = entry_time[1]), by = tripID]
simulated_start_time <- (sample[[3]][, .(start_time = entry_time[1]), by = tripID][, 2])
simulated__start_time <- simulated_start_time[["start_time"]]
pressure_start_time <- (pressure_test[[3]][, .(start_time = entry_time[1]), by = tripID][, 2])
pressure_start_time <- pressure_start_time[["start_time"]]
R <- request_R(p, start_times$start_time, start_times$start_time, sample[[2]]$real_length, 1, risk_free = 0)
simulated_R <- request_R(simulated_p, simulated__start_time, simulated__start_time, sample[[1]]$simulated_length, 1, risk_free = 0)
pressure_R <- request_R(pressure_p, pressure_start_time, pressure_start_time, pressure_test[[1]]$simulated_length, 1, risk_free = 0)
K <- request_K(p, start_times$start_time, start_times$start_time, sample[[2]]$real_length, risk_free = 0)
simulated_K <- request_K(simulated_p, simulated__start_time, simulated__start_time, sample[[1]]$simulated_length, risk_free = 0)
pressure_K <- request_K(pressure_p, pressure_start_time, pressure_start_time, pressure_test[[1]]$simulated_length, risk_free = 0)
income <- mean(simulated_R + simulated_K, na.rm = TRUE)
normal_expand <- real_price
pressure_expand <- simulated_price$pressured_price
mean(real_price)
income
mean(income - normal_expand) / income
mean(income - pressure_expand) / income
plot(density(na.omit(income - normal_expand)), xlab = "income", main = "")
abline(v = 0, col = "red", lty = 2)
plot(density(na.omit(income - pressure_expand)), xlab = "income", main = "")
abline(v = 0, col = "red", lty = 2)
knitr::opts_chunk$set(echo = TRUE)
# Load required libraries
library(traveltimeCLT)
library(data.table)
set.seed(12345)
trips <- fread("data/trips.csv")
id <- sample(unique(trips$trip), 1000)
train <- trips[!trips$trip %in% id, ]
test <- trips[trips$trip %in% id, ]
timeBin_x_edge <- get_timeBin_x_edges(train)
# sample_route(id,trips,1001)
sample <- sample_route(id, trips, 1001, timeBin_x_edge, abuse_ratio = 0, lambda = 0)
pressure_test <- sample_route(id, trips, 1000, timeBin_x_edge, abuse_ratio = 0, lambda = 0.9)
plot_CDF_compare(sample[[2]]$real_time, sample[[1]]$dependent_time, "frequency simulation")
plot_CDF_compare(pressure_test[[2]]$real_time, pressure_test[[1]]$dependent_time, "frequency simulation")
real_price <- price(sample[[2]]$real_time, sample[[2]]$real_length)[, 1]
simulated_price <- data.table(
simulated_price = price(sample[[1]]$dependent_time, sample[[1]]$simulated_length)[1:1000, 1],
pressured_price = price(pressure_test[[1]]$dependent_time, pressure_test[[1]]$simulated_length)[, 1]
)
names(train)[c(2, 3, 5, 7, 8)] <- c("tripID", "entry_time", "duration_secs", "distance_meters", "linkID")
train$speed <- exp(train$logspeed)
train$timeBin <- time_bins_readable(train$entry_time)
fit <- traveltimeCLT(train)
test <- trips[trips$trip %in% id, ]
names(test)[c(2, 3, 5, 7, 8)] <- c("tripID", "entry_time", "1", "distance_meters", "linkID")
names(sample[[3]]) <- c("tripID", "linkID", "entry_time", "distance_meters")
names(pressure_test[[3]]) <- c("tripID", "linkID", "entry_time", "distance_meters")
p <- predict(fit, test)
simulated_p <- predict(fit, sample[[3]])
pressure_p <- predict(fit, pressure_test[[3]])
start_times <- test[, .(start_time = entry_time[1]), by = tripID]
simulated_start_time <- (sample[[3]][, .(start_time = entry_time[1]), by = tripID][, 2])
simulated__start_time <- simulated_start_time[["start_time"]]
pressure_start_time <- (pressure_test[[3]][, .(start_time = entry_time[1]), by = tripID][, 2])
pressure_start_time <- pressure_start_time[["start_time"]]
R <- request_R(p, start_times$start_time, start_times$start_time, sample[[2]]$real_length, 1, risk_free = 0)
simulated_R <- request_R(simulated_p, simulated__start_time, simulated__start_time, sample[[1]]$simulated_length, 1, risk_free = 0)
pressure_R <- request_R(pressure_p, pressure_start_time, pressure_start_time, pressure_test[[1]]$simulated_length, 1, risk_free = 0)
K <- request_K(p, start_times$start_time, start_times$start_time, sample[[2]]$real_length, risk_free = 0)
simulated_K <- request_K(simulated_p, simulated__start_time, simulated__start_time, sample[[1]]$simulated_length, risk_free = 0)
pressure_K <- request_K(pressure_p, pressure_start_time, pressure_start_time, pressure_test[[1]]$simulated_length, risk_free = 0)
income <- mean(simulated_R + simulated_K, na.rm = TRUE)
normal_expand <- real_price
pressure_expand <- simulated_price$pressured_price
mean(real_price)
income
mean(income - normal_expand) / income
mean(income - pressure_expand) / income
plot(density(na.omit(income - normal_expand)), xlab = "income", main = "")
abline(v = 0, col = "red", lty = 2)
plot(density(na.omit(income - pressure_expand)), xlab = "income", main = "")
abline(v = 0, col = "red", lty = 2)
knitr::opts_chunk$set(echo = TRUE)
# Load required libraries
library(traveltimeCLT)
library(data.table)
set.seed(12345)
trips <- fread("data/trips.csv")
id <- sample(unique(trips$trip), 1000)
train <- trips[!trips$trip %in% id, ]
test <- trips[trips$trip %in% id, ]
timeBin_x_edge <- get_timeBin_x_edges(train)
# sample_route(id,trips,1001)
sample <- sample_route(id, trips, 1001, timeBin_x_edge, abuse_ratio = 0, lambda = 0)
pressure_test <- sample_route(id, trips, 1000, timeBin_x_edge, abuse_ratio = 0.1, lambda = 0.1)
plot_CDF_compare(sample[[2]]$real_time, sample[[1]]$dependent_time, "frequency simulation")
plot_CDF_compare(pressure_test[[2]]$real_time, pressure_test[[1]]$dependent_time, "frequency simulation")
real_price <- price(sample[[2]]$real_time, sample[[2]]$real_length)[, 1]
simulated_price <- data.table(
simulated_price = price(sample[[1]]$dependent_time, sample[[1]]$simulated_length)[1:1000, 1],
pressured_price = price(pressure_test[[1]]$dependent_time, pressure_test[[1]]$simulated_length)[, 1]
)
names(train)[c(2, 3, 5, 7, 8)] <- c("tripID", "entry_time", "duration_secs", "distance_meters", "linkID")
train$speed <- exp(train$logspeed)
train$timeBin <- time_bins_readable(train$entry_time)
fit <- traveltimeCLT(train)
test <- trips[trips$trip %in% id, ]
names(test)[c(2, 3, 5, 7, 8)] <- c("tripID", "entry_time", "1", "distance_meters", "linkID")
names(sample[[3]]) <- c("tripID", "linkID", "entry_time", "distance_meters")
names(pressure_test[[3]]) <- c("tripID", "linkID", "entry_time", "distance_meters")
p <- predict(fit, test)
simulated_p <- predict(fit, sample[[3]])
pressure_p <- predict(fit, pressure_test[[3]])
start_times <- test[, .(start_time = entry_time[1]), by = tripID]
simulated_start_time <- (sample[[3]][, .(start_time = entry_time[1]), by = tripID][, 2])
simulated__start_time <- simulated_start_time[["start_time"]]
pressure_start_time <- (pressure_test[[3]][, .(start_time = entry_time[1]), by = tripID][, 2])
pressure_start_time <- pressure_start_time[["start_time"]]
R <- request_R(p, start_times$start_time, start_times$start_time, sample[[2]]$real_length, 1, risk_free = 0)
simulated_R <- request_R(simulated_p, simulated__start_time, simulated__start_time, sample[[1]]$simulated_length, 1, risk_free = 0)
pressure_R <- request_R(pressure_p, pressure_start_time, pressure_start_time, pressure_test[[1]]$simulated_length, 1, risk_free = 0)
K <- request_K(p, start_times$start_time, start_times$start_time, sample[[2]]$real_length, risk_free = 0)
simulated_K <- request_K(simulated_p, simulated__start_time, simulated__start_time, sample[[1]]$simulated_length, risk_free = 0)
pressure_K <- request_K(pressure_p, pressure_start_time, pressure_start_time, pressure_test[[1]]$simulated_length, risk_free = 0)
income <- mean(simulated_R + simulated_K, na.rm = TRUE)
normal_expand <- real_price
pressure_expand <- simulated_price$pressured_price
mean(real_price)
income
mean(income - normal_expand) / income
mean(income - pressure_expand) / income
plot(density(na.omit(income - normal_expand)), xlab = "income", main = "")
abline(v = 0, col = "red", lty = 2)
plot(density(na.omit(income - pressure_expand)), xlab = "income", main = "")
abline(v = 0, col = "red", lty = 2)
knitr::opts_chunk$set(echo = TRUE)
# Load required libraries
library(traveltimeCLT)
library(data.table)
set.seed(12345)
trips <- fread("data/trips.csv")
id <- sample(unique(trips$trip), 1000)
train <- trips[!trips$trip %in% id, ]
test <- trips[trips$trip %in% id, ]
timeBin_x_edge <- get_timeBin_x_edges(train)
# sample_route(id,trips,1001)
sample <- sample_route(id, trips, 1001, timeBin_x_edge, abuse_ratio = 0, lambda = 0)
pressure_test <- sample_route(id, trips, 1000, timeBin_x_edge, abuse_ratio = 0.1, lambda = 0.2)
plot_CDF_compare(sample[[2]]$real_time, sample[[1]]$dependent_time, "frequency simulation")
plot_CDF_compare(pressure_test[[2]]$real_time, pressure_test[[1]]$dependent_time, "frequency simulation")
real_price <- price(sample[[2]]$real_time, sample[[2]]$real_length)[, 1]
simulated_price <- data.table(
simulated_price = price(sample[[1]]$dependent_time, sample[[1]]$simulated_length)[1:1000, 1],
pressured_price = price(pressure_test[[1]]$dependent_time, pressure_test[[1]]$simulated_length)[, 1]
)
names(train)[c(2, 3, 5, 7, 8)] <- c("tripID", "entry_time", "duration_secs", "distance_meters", "linkID")
train$speed <- exp(train$logspeed)
train$timeBin <- time_bins_readable(train$entry_time)
fit <- traveltimeCLT(train)
test <- trips[trips$trip %in% id, ]
names(test)[c(2, 3, 5, 7, 8)] <- c("tripID", "entry_time", "1", "distance_meters", "linkID")
names(sample[[3]]) <- c("tripID", "linkID", "entry_time", "distance_meters")
names(pressure_test[[3]]) <- c("tripID", "linkID", "entry_time", "distance_meters")
p <- predict(fit, test)
simulated_p <- predict(fit, sample[[3]])
pressure_p <- predict(fit, pressure_test[[3]])
start_times <- test[, .(start_time = entry_time[1]), by = tripID]
simulated_start_time <- (sample[[3]][, .(start_time = entry_time[1]), by = tripID][, 2])
simulated__start_time <- simulated_start_time[["start_time"]]
pressure_start_time <- (pressure_test[[3]][, .(start_time = entry_time[1]), by = tripID][, 2])
pressure_start_time <- pressure_start_time[["start_time"]]
R <- request_R(p, start_times$start_time, start_times$start_time, sample[[2]]$real_length, 1, risk_free = 0)
simulated_R <- request_R(simulated_p, simulated__start_time, simulated__start_time, sample[[1]]$simulated_length, 1, risk_free = 0)
pressure_R <- request_R(pressure_p, pressure_start_time, pressure_start_time, pressure_test[[1]]$simulated_length, 1, risk_free = 0)
K <- request_K(p, start_times$start_time, start_times$start_time, sample[[2]]$real_length, risk_free = 0)
simulated_K <- request_K(simulated_p, simulated__start_time, simulated__start_time, sample[[1]]$simulated_length, risk_free = 0)
pressure_K <- request_K(pressure_p, pressure_start_time, pressure_start_time, pressure_test[[1]]$simulated_length, risk_free = 0)
income <- mean(simulated_R + simulated_K, na.rm = TRUE)
normal_expand <- real_price
pressure_expand <- simulated_price$pressured_price
mean(real_price)
income
mean(income - normal_expand) / income
mean(income - pressure_expand) / income
plot(density(na.omit(income - normal_expand)), xlab = "income", main = "")
abline(v = 0, col = "red", lty = 2)
plot(density(na.omit(income - pressure_expand)), xlab = "income", main = "")
abline(v = 0, col = "red", lty = 2)
knitr::opts_chunk$set(echo = TRUE)
# Load required libraries
library(traveltimeCLT)
library(data.table)
set.seed(12345)
trips <- fread("data/trips.csv")
id <- sample(unique(trips$trip), 1000)
train <- trips[!trips$trip %in% id, ]
test <- trips[trips$trip %in% id, ]
timeBin_x_edge <- get_timeBin_x_edges(train)
# sample_route(id,trips,1001)
sample <- sample_route(id, trips, 1001, timeBin_x_edge, abuse_ratio = 0, lambda = 0)
pressure_test <- sample_route(id, trips, 1000, timeBin_x_edge, abuse_ratio = 0.1, lambda = 0.3)
plot_CDF_compare(sample[[2]]$real_time, sample[[1]]$dependent_time, "frequency simulation")
plot_CDF_compare(pressure_test[[2]]$real_time, pressure_test[[1]]$dependent_time, "frequency simulation")
real_price <- price(sample[[2]]$real_time, sample[[2]]$real_length)[, 1]
simulated_price <- data.table(
simulated_price = price(sample[[1]]$dependent_time, sample[[1]]$simulated_length)[1:1000, 1],
pressured_price = price(pressure_test[[1]]$dependent_time, pressure_test[[1]]$simulated_length)[, 1]
)
names(train)[c(2, 3, 5, 7, 8)] <- c("tripID", "entry_time", "duration_secs", "distance_meters", "linkID")
train$speed <- exp(train$logspeed)
train$timeBin <- time_bins_readable(train$entry_time)
fit <- traveltimeCLT(train)
test <- trips[trips$trip %in% id, ]
names(test)[c(2, 3, 5, 7, 8)] <- c("tripID", "entry_time", "1", "distance_meters", "linkID")
names(sample[[3]]) <- c("tripID", "linkID", "entry_time", "distance_meters")
names(pressure_test[[3]]) <- c("tripID", "linkID", "entry_time", "distance_meters")
p <- predict(fit, test)
simulated_p <- predict(fit, sample[[3]])
pressure_p <- predict(fit, pressure_test[[3]])
start_times <- test[, .(start_time = entry_time[1]), by = tripID]
simulated_start_time <- (sample[[3]][, .(start_time = entry_time[1]), by = tripID][, 2])
simulated__start_time <- simulated_start_time[["start_time"]]
pressure_start_time <- (pressure_test[[3]][, .(start_time = entry_time[1]), by = tripID][, 2])
pressure_start_time <- pressure_start_time[["start_time"]]
R <- request_R(p, start_times$start_time, start_times$start_time, sample[[2]]$real_length, 1, risk_free = 0)
simulated_R <- request_R(simulated_p, simulated__start_time, simulated__start_time, sample[[1]]$simulated_length, 1, risk_free = 0)
pressure_R <- request_R(pressure_p, pressure_start_time, pressure_start_time, pressure_test[[1]]$simulated_length, 1, risk_free = 0)
K <- request_K(p, start_times$start_time, start_times$start_time, sample[[2]]$real_length, risk_free = 0)
simulated_K <- request_K(simulated_p, simulated__start_time, simulated__start_time, sample[[1]]$simulated_length, risk_free = 0)
pressure_K <- request_K(pressure_p, pressure_start_time, pressure_start_time, pressure_test[[1]]$simulated_length, risk_free = 0)
income <- mean(simulated_R + simulated_K, na.rm = TRUE)
normal_expand <- real_price
pressure_expand <- simulated_price$pressured_price
mean(real_price)
income
mean(income - normal_expand) / income
mean(income - pressure_expand) / income
plot(density(na.omit(income - normal_expand)), xlab = "income", main = "")
abline(v = 0, col = "red", lty = 2)
plot(density(na.omit(income - pressure_expand)), xlab = "income", main = "")
abline(v = 0, col = "red", lty = 2)
knitr::opts_chunk$set(echo = TRUE)
# Load required libraries
library(traveltimeCLT)
library(data.table)
set.seed(12345)
trips <- fread("data/trips.csv")
id <- sample(unique(trips$trip), 1000)
train <- trips[!trips$trip %in% id, ]
test <- trips[trips$trip %in% id, ]
timeBin_x_edge <- get_timeBin_x_edges(train)
# sample_route(id,trips,1001)
sample <- sample_route(id, trips, 1001, timeBin_x_edge, abuse_ratio = 0, lambda = 0)
pressure_test <- sample_route(id, trips, 1000, timeBin_x_edge, abuse_ratio = 0.1, lambda = 0.4)
plot_CDF_compare(sample[[2]]$real_time, sample[[1]]$dependent_time, "frequency simulation")
plot_CDF_compare(pressure_test[[2]]$real_time, pressure_test[[1]]$dependent_time, "frequency simulation")
real_price <- price(sample[[2]]$real_time, sample[[2]]$real_length)[, 1]
simulated_price <- data.table(
simulated_price = price(sample[[1]]$dependent_time, sample[[1]]$simulated_length)[1:1000, 1],
pressured_price = price(pressure_test[[1]]$dependent_time, pressure_test[[1]]$simulated_length)[, 1]
)
names(train)[c(2, 3, 5, 7, 8)] <- c("tripID", "entry_time", "duration_secs", "distance_meters", "linkID")
train$speed <- exp(train$logspeed)
train$timeBin <- time_bins_readable(train$entry_time)
fit <- traveltimeCLT(train)
test <- trips[trips$trip %in% id, ]
names(test)[c(2, 3, 5, 7, 8)] <- c("tripID", "entry_time", "1", "distance_meters", "linkID")
names(sample[[3]]) <- c("tripID", "linkID", "entry_time", "distance_meters")
names(pressure_test[[3]]) <- c("tripID", "linkID", "entry_time", "distance_meters")
p <- predict(fit, test)
simulated_p <- predict(fit, sample[[3]])
pressure_p <- predict(fit, pressure_test[[3]])
start_times <- test[, .(start_time = entry_time[1]), by = tripID]
simulated_start_time <- (sample[[3]][, .(start_time = entry_time[1]), by = tripID][, 2])
simulated__start_time <- simulated_start_time[["start_time"]]
pressure_start_time <- (pressure_test[[3]][, .(start_time = entry_time[1]), by = tripID][, 2])
pressure_start_time <- pressure_start_time[["start_time"]]
R <- request_R(p, start_times$start_time, start_times$start_time, sample[[2]]$real_length, 1, risk_free = 0)
simulated_R <- request_R(simulated_p, simulated__start_time, simulated__start_time, sample[[1]]$simulated_length, 1, risk_free = 0)
pressure_R <- request_R(pressure_p, pressure_start_time, pressure_start_time, pressure_test[[1]]$simulated_length, 1, risk_free = 0)
K <- request_K(p, start_times$start_time, start_times$start_time, sample[[2]]$real_length, risk_free = 0)
simulated_K <- request_K(simulated_p, simulated__start_time, simulated__start_time, sample[[1]]$simulated_length, risk_free = 0)
pressure_K <- request_K(pressure_p, pressure_start_time, pressure_start_time, pressure_test[[1]]$simulated_length, risk_free = 0)
income <- mean(simulated_R + simulated_K, na.rm = TRUE)
normal_expand <- real_price
pressure_expand <- simulated_price$pressured_price
mean(real_price)
income
mean(income - normal_expand) / income
mean(income - pressure_expand) / income
plot(density(na.omit(income - normal_expand)), xlab = "income", main = "")
abline(v = 0, col = "red", lty = 2)
plot(density(na.omit(income - pressure_expand)), xlab = "income", main = "")
abline(v = 0, col = "red", lty = 2)
knitr::opts_chunk$set(echo = TRUE)
library(traveltimeCLT)
library(data.table)
trips <- fread("data/trips.csv")
names(trips)[c(2, 3, 5, 7, 8)] <- c("tripID", "entry_time", "duration_secs", "distance_meters", "linkID")
trips$speed <- exp(trips$logspeed)
trips$timeBin <- time_bins_readable(trips$entry_time)
set.seed(1234)
id <- sample(unique(trips$trip), 2000)
test_id <- sample(id, 40)
train_id <- setdiff(id, test_id)
user_records <- subset(trips, tripID %in% train_id)
test_records <- subset(trips, tripID %in% test_id)
study_records <- subset(trips, !tripID %in% test_id)
user_records[, time_category := ifelse(timeBin %in% c("MorningRush", "EveningRush"), timeBin, "Otherwise")]
test_records[, time_category := ifelse(timeBin %in% c("MorningRush", "EveningRush"), timeBin, "Otherwise")]
user_data <- user_records[, .(
start_time = min(entry_time),
end_time = max(entry_time),
duration = sum(duration_secs),
distance = sum(distance_meters)
), by = tripID]
user_data$real_price <- price(user_data$duration, user_data$distance)[, 1]
test_data <- test_records[, .(
start_time = min(entry_time),
end_time = max(entry_time),
duration = sum(duration_secs),
distance = sum(distance_meters)
), by = tripID]
test_data$real_price <- price(test_data$duration, test_data$distance)[, 1]
My <- 40
bk <- sample(c("MorningRush", "EveningRush", "Otherwise"), sum(My) * 10, replace = TRUE)
rho_k <- sapply(bk, function(x) {
user_records[time_category == x, sample(unique(tripID), 1, replace = TRUE)]
})
simulated_record <- data.table()
for (i in 1:length(rho_k)) {
new_rows <- cbind(user_records[tripID %in% rho_k[i]], i)
simulated_record <- rbind(simulated_record, new_rows)
}
simulated_data <- simulated_record[, .(
tripID = tripID[1],
start_time = min(entry_time),
distance = sum(distance_meters)
), by = i]
fit1 <- traveltimeCLT(trips, "trip-specific")
fit2 <- traveltimeCLT(trips, "population")
p1 <- predict(fit1, simulated_record)
p2 <- predict(fit2, simulated_record)
p1 <- data.table(p1)
p2 <- data.table(p2)
p1 <- merge(p1, simulated_data, by = c("tripID"), all.y = TRUE)
p2 <- merge(p2, simulated_data, by = c("tripID"), all.y = TRUE)
Rt_0 <- request_R(p1, p1$start_time, p1$start_time, p1$distance, risk_free = 0, zeta = 0)
Rp_0 <- request_R(p2, p2$start_time, p2$start_time, p2$distance, risk_free = 0, zeta = 0)
Rt_1 <- request_R(p1, p1$start_time, p1$start_time, p1$distance, risk_free = 0, zeta = 0.1)
Rp_1 <- request_R(p2, p2$start_time, p2$start_time, p2$distance, risk_free = 0, zeta = 0.1)
Kt <- request_K(p1, p1$start_time, p1$start_time, p1$distance, risk_free = 0)
Kp <- request_K(p2, p2$start_time, p2$start_time, p2$distance, risk_free = 0)
income_t_1 <- sum(Rt_1 + Kt) / 10
income_t_0 <- sum(Rt_0 + Kt) / 10
income_p_1 <- sum(Rp_1 + Kp) / 10
income_p_0 <- sum(Rp_0 + Kp) / 10
P <- sum(test_data$real_price)
Model <- c(rep("Trip-Specific", 2), rep("Population", 2))
Cutoff <- rep(c(0, 0.1), 2)
Percentage_profit <- c(
(income_t_0 - P) / P,
(income_t_1 - P) / P,
(income_p_0 - P) / P,
(income_p_1 - P) / P
)
Average_profit <- c(
(income_t_0 - P) / 40,
(income_t_1 - P) / 40,
(income_p_0 - P) / 40,
(income_p_1 - P) / 40
)
Maximum_Loss <- c(
min((Rt_0 + Kt) - P / 40),
min((Rt_1 + Kt) - P / 40),
min((Rp_0 + Kp) - P / 40),
min((Rp_1 + Kp) - P / 40)
)
table3 <- data.table(
Model = Model,
Cutoff = Cutoff,
Percentage_Profit = round(Percentage_profit * 100, 5),
Average_Profit = round(Average_profit, 5),
Maximum_Loss = round(Maximum_Loss, 5)
)
table3
